diff --git a/node_modules/stylelint-magic-numbers/LICENSE b/node_modules/stylelint-magic-numbers/LICENSE
index a2de4d8..982962a 100644
--- a/node_modules/stylelint-magic-numbers/LICENSE
+++ b/node_modules/stylelint-magic-numbers/LICENSE
@@ -1,6 +1,7 @@
 MIT License
 
 Copyright (c) 2020 Julian Strecker
+Copyright (C) 2023 by Marc-AndrÃ© Charpentier
 
 Permission is hereby granted, free of charge, to any person obtaining a copy
 of this software and associated documentation files (the "Software"), to deal
diff --git a/node_modules/stylelint-magic-numbers/dist/index.js b/node_modules/stylelint-magic-numbers/dist/index.js
index 696de55..f1d06fb 100644
--- a/node_modules/stylelint-magic-numbers/dist/index.js
+++ b/node_modules/stylelint-magic-numbers/dist/index.js
@@ -45,11 +45,12 @@ var numbersRule = function numbersRule(actual, config) {
 
     var acceptedValues = config.acceptedValues || [];
     var acceptedNumbers = config.acceptedNumbers || [];
+	  var ignoreProperties = config.ignoreProperties || [];
     root.walkDecls(function (decl) {
       var value = decl.value;
       var prop = decl.prop; // ignore variables
 
-      if ((0, _isVariable["default"])(value) || value.startsWith("$") || prop.startsWith("$")) {
+      if ((0, _isVariable["default"])(value) || value.startsWith("url") || value.startsWith("U+") || value.startsWith("$") || prop.startsWith("$") || prop.startsWith("--") || ignoreProperties.includes(prop)) {
         return;
       } // ignore values that are no numbers
 
@@ -70,7 +71,7 @@ var numbersRule = function numbersRule(actual, config) {
       var failedValues = [];
       values.forEach(function (val) {
         var theNumber = val.match(/([\d.]+)/)[0];
-        var valOK = acceptedValues.includes(val) || acceptedNumbers.includes(parseFloat(theNumber));
+			var valOK = acceptedValues.some(e => val.match(e)) || acceptedNumbers.some(e => val.match(e));
         accepted = accepted && valOK;
 
         if (!valOK) {
@@ -91,6 +92,7 @@ var numbersRule = function numbersRule(actual, config) {
 
       _stylelint.utils.report({
         index: decl.lastEach,
+        messageArgs: [value],
         message: numbersMessages.expected("\"".concat(prop, ": ").concat(value, "\" -> ").concat(failedValues, " failed")),
         node: decl,
         ruleName: numbersRuleName,
diff --git a/node_modules/stylelint-magic-numbers/src/index.js b/node_modules/stylelint-magic-numbers/src/index.js
index 84cb66c..4032026 100644
--- a/node_modules/stylelint-magic-numbers/src/index.js
+++ b/node_modules/stylelint-magic-numbers/src/index.js
@@ -69,6 +69,7 @@ export const numbersRule = (actual, config) => {
             }
 
             utils.report({
+					messageArgs: [prop, value],
                 index: decl.lastEach,
                 message: numbersMessages.expected(`"${prop}: ${value}" -> ${failedValues} failed`),
                 node: decl,
